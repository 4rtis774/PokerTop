class_chart TABLE
indexing
    in_cluster: "POKER_TABLE";
explanation
    "Represents a table."
query
    "What is size of the table?",
    "How many players play?",
command
    "Construct table."
constraint
    "Size must be greater or equal than 2 and less or equal to 10"    
end

class_chart PLAYER
indexing
    in_cluster: "POKER_TABLE";
explanation
    "Defines a player."
query
    "Who am I?",
    "How much money do I have?",
    "Am I active in current hand?",
    -- For the time being each seat will know who is sitting on it.
    -- Player will have fields table and seat defining him respectively.
    -- Probably in a later stage of development :( .
    "Where am I sitting?",
    -- A bit optimistic for design time - Aiming high!
    "My statistics?"
command
    "Construct player.",
    "Set Name.",
    "Set bank amount.",
    "Add value to bank amount",
    "Subtract value from bank amount"
constraint
    "Values and bank amount must always be greater or equal to zero."    
end

class_chart DEALER
indexing
    in_cluster: "POKER_TABLE";
explanation
    "Dealer is responsible for handling all the table actions."
query
    "Who is on the button?",
    "What is the blind?",
    "What is ante?",
    "What is the pot?",
    "Add bet to pot?",
    "Decide winner?",
    "What is the state of the game?",
    "Is it valid bet?",
command
    "Update game state."
constraint
    "Only one dealer per table."
end


class_chart HISTORY
indexing
    in_cluster: "POKER_TABLE";
explanation
    "Keeps history of every hand."
query
    "Is hand over?"
command
    "Store hand."
constraint
    "Hand need to be over in order to be stored."
end

class_chart SEAT
indexing
    in_cluster: "POKER_TABLE";
explanation
    "Each player have a specific seat in a table."
query
    "What is the seat position?",
    "Who is sitting on that seat?",
    "Is this seat available?"
command
    "Construct seat.",
    "Assign player to seat."
constraint
    "One player per seat."
end

class_chart GAME_STATE
indexing
    in_cluster: "POKER_TABLE";
explanation
    "Tracks down status of the game."
query
    "Whats the status? (Including who's turn is it)"
command
    "Set last action.",
    "Update game status."
constraint
    "Needs to be unique (Singleton)."
end

-- Class charts for DEALER_ACTION
class_chart BUTTON
indexing
    in_cluster: "DEALER_ACTION";
explanation
    "A player will represent the dealer in each hand."
query
    "Who is on the button?"
command
    "Next player on the button."
constraint
    "Only one player can be on the Dealer Button per hand."
end

class_chart DECK
indexing
    in_cluster: "DEALER_ACTION";
explanation
    "Represent the deck of 52 cards."
query
    "Am I suffled?",
    "How many cards left?"
command
    "Shuffle up.",
    "Deal cards.",
    "Deal flop.",
    "Deal turn.",
    "Deal river.",
constraint
    "There is only one deck of cards."
end

class_chart CARD
indexing
    in_cluster: "DEALER_ACTION";
explanation
    "Represents on card."
query
    "What is my value?",
    "What is my suit?"
command
    "Set value.",
    "Set suit."
constraint
    "Value: 2 to 9 | (T)Ten | (J)Jack | (Q)Queen | (K)King. Suit: (s)spades | (c)clubs | (d)diamonds | (h)hearts "
end

class_chart POT
indexing
    in_cluster: "DEALER_ACTION";
explanation
    "Represents the pot."
query
    "What is the size of the pot?"
command
    "Add bet to pot."
constraint
    "No need for uniqueness there are several occassions for side pots."
end

class_chart BLIND
indexing
    in_cluster: "DEALER_ACTION";
explanation
    "Level of the blind."
query
    "What is the current level?"
command
    "Increase blind."
constraint
    "New blind value > old blind value."
end

class_chart ANTE
indexing
    in_cluster: "DEALER_ACTION";
explanation
    "Value of ante."
query
    "What is the current ante?"
command
    "Increase ante."
constraint
    "New ante value > old ante value."
end
